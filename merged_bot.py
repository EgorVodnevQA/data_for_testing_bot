import json
from secrets import token_urlsafe
from telebot import TeleBot, types
from faker import Faker
import os

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ (–ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô –¢–û–ö–ï–ù!)
TOKEN = '–¢–≤–æ–π —Ç–æ–∫–µ–Ω'
bot = TeleBot(TOKEN, parse_mode='html')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Faker (–¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–∞—Ä—Ç)
faker_ru = Faker('ru_RU')  # –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
faker_en = Faker()         # –¥–ª—è –∫–∞—Ä—Ç

# –ü—É—Ç—å –∫ —Å—Ç–∏–∫–µ—Ä—É –≤ Google Colab
STICKER_PATH = '/content/sticker.webp'

# ===== –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã =====
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu_keyboard.row(
    types.KeyboardButton("üôç‚Äç‚ôÇÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"),
    types.KeyboardButton("üí≥ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É")
)

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_count_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
user_count_keyboard.row(
    types.KeyboardButton("1Ô∏è‚É£"), types.KeyboardButton("2Ô∏è‚É£")
)
user_count_keyboard.row(
    types.KeyboardButton("5Ô∏è‚É£"), types.KeyboardButton("üîü")
)

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–∞—Ä—Ç—ã
card_type_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
card_type_keyboard.row(
    types.KeyboardButton("VISA"), types.KeyboardButton("Mastercard")
)
card_type_keyboard.row(
    types.KeyboardButton("Maestro"), types.KeyboardButton("JCB")
)

def send_welcome_sticker(chat_id):
    """–ü—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        if os.path.exists(STICKER_PATH):
            with open(STICKER_PATH, 'rb') as sticker:
                bot.send_sticker(chat_id, sticker)
            return True
        return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∏–∫–µ—Ä–∞: {e}")
        return False

# ===== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ =====
@bot.message_handler(commands=['start'])
def start_command(message: types.Message):
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä
    send_welcome_sticker(message.chat.id)
    
    bot.send_message(
        chat_id=message.chat.id,
        text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_keyboard
    )

@bot.message_handler(func=lambda msg: msg.text == "üôç‚Äç‚ôÇÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
def ask_user_count(message: types.Message):
    bot.send_message(
        chat_id=message.chat.id,
        text="–°–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å?",
        reply_markup=user_count_keyboard
    )

@bot.message_handler(func=lambda msg: msg.text in ["1Ô∏è‚É£", "2Ô∏è‚É£", "5Ô∏è‚É£", "üîü"])
def generate_users(message: types.Message):
    payload_len = {
        "1Ô∏è‚É£": 1,
        "2Ô∏è‚É£": 2,
        "5Ô∏è‚É£": 5,
        "üîü": 10
    }[message.text]

    total_payload = []
    for _ in range(payload_len):
        user_info = faker_ru.simple_profile()
        user_info['phone'] = f'+7{faker_ru.msisdn()[3:]}'
        user_info['password'] = token_urlsafe(10)
        total_payload.append(user_info)

    payload_str = json.dumps(total_payload, indent=2, ensure_ascii=False, default=str)
    
    bot.send_message(
        chat_id=message.chat.id,
        text=f"–î–∞–Ω–Ω—ã–µ {payload_len} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n<code>{payload_str}</code>",
        reply_markup=main_menu_keyboard
    )

@bot.message_handler(func=lambda msg: msg.text == "üí≥ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É")
def ask_card_type(message: types.Message):
    bot.send_message(
        chat_id=message.chat.id,
        text="–í—ã–±–µ—Ä–∏ —Ç–∏–ø –∫–∞—Ä—Ç—ã:",
        reply_markup=card_type_keyboard
    )

@bot.message_handler(func=lambda msg: msg.text in ["VISA", "Mastercard", "Maestro", "JCB"])
def generate_card(message: types.Message):
    card_type = message.text.lower()
    card_number = faker_en.credit_card_number(card_type)
    
    bot.send_message(
        chat_id=message.chat.id,
        text=f"–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞ {card_type}:\n<code>{card_number}</code>",
        reply_markup=main_menu_keyboard
    )

@bot.message_handler(func=lambda msg: True)
def unknown_message(message: types.Message):
    bot.send_message(
        chat_id=message.chat.id,
        text="–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ /start.",
        reply_markup=main_menu_keyboard
    )

# ===== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ =====
def main():
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å—Ç–∏–∫–µ—Ä–∞
    if not os.path.exists(STICKER_PATH):
        print(f"‚ö† –°—Ç–∏–∫–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {STICKER_PATH}")
        print("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å—Ç–∏–∫–µ—Ä–∞ (webp) –≤ –ø–∞–ø–∫—É /content –≤ Google Colab")
    
    bot.infinity_polling()

if __name__ == '__main__':
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Colab
    try:
        import google.colab
        !pip install pyTelegramBotAPI faker
    except:
        pass
    
    main()
